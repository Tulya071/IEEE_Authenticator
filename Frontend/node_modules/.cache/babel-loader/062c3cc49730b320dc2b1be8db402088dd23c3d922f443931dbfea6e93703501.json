{"ast":null,"code":"// import React, { useState } from 'react';\n// import {\n//     Button,\n//     Card,\n//     CardHeader,\n//     CardBody,\n//     FormGroup,\n//     Form,\n//     Input,\n//     InputGroupAddon,\n//     InputGroupText,\n//     InputGroup,\n//     Row,\n//     Col,\n//   } from \"reactstrap\";\n\n// const CameraReadyPage = () => {\n//   const [paperTitle, setPaperTitle] = useState('');\n//   const [authors, setAuthors] = useState(['', '', '', '']);\n//   const [abstract, setAbstract] = useState('');\n//   const [driveLink, setDriveLink] = useState('');\n//   const [submissionStatus, setSubmissionStatus] = useState('');\n\n//   const handleAuthorChange = (index, value) => {\n//     const newAuthors = [...authors];\n//     newAuthors[index] = value;\n//     setAuthors(newAuthors);\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     // Check if there are at least 1 and at most 4 authors\n//     const filteredAuthors = authors.filter((author) => author.trim() !== '');\n//     if (filteredAuthors.length === 0 || filteredAuthors.length > 4) {\n//       setSubmissionStatus('Error: Number of authors should be between 1 and 4');\n//       return;\n//     }\n\n//     // Perform submission logic (mock example)\n//     try {\n//       // Mock API call\n//       const response = await mockSubmitPaper({\n//         paperTitle,\n//         authors: filteredAuthors.join(', '),\n//         abstract,\n//         driveLink,\n//       });\n\n//       // Display submission status\n//       setSubmissionStatus(response.success ? 'Submission successful!' : 'Submission failed');\n//     } catch (error) {\n//       console.error('Error during submission:', error);\n//       setSubmissionStatus('Submission failed');\n//     }\n//   };\n\n//   // Mock API function\n//   const mockSubmitPaper = (data) => {\n//     return new Promise((resolve) => {\n//       // Simulate API call delay\n//       setTimeout(() => {\n//         // Mock response\n//         resolve({ success: true, data });\n//       }, 1000);\n//     });\n//   };\n\n//   return (\n//     <>\n//     <UserHeader/>\n//     <Col lg=\"6\" md=\"8\">\n//         <Card className=\"bg-secondary shadow border-0\">\n//           <CardBody className=\"px-lg-5 py-lg-5\">\n//             <div className=\"text-center text-muted mb-4\">\n//               <small>Camera Ready Submission</small>\n//             </div>\n//             <Form role=\"form\" onSubmit={handleSubmit}>\n//               <FormGroup>\n//                 <InputGroup className=\"input-group-alternative mb-3\">\n//                   <InputGroupAddon addonType=\"prepend\">\n//                     <InputGroupText>\n//                       <i className=\"ni ni-hat-3\" />\n//                     </InputGroupText>\n//                   </InputGroupAddon>\n//                   <Input name=\"paper title\" placeholder=\"Paper Title\" type=\"text\" onChange={handleInputChange} />\n//                 </InputGroup>\n//               </FormGroup>\n//               <FormGroup>\n//                 <InputGroup className=\"input-group-alternative mb-3\">\n//                   <InputGroupAddon addonType=\"prepend\">\n//                     <InputGroupText>\n//                       <i className=\"ni ni-email-83\" />\n//                     </InputGroupText>\n//                   </InputGroupAddon>\n//                   {/* <Input name=\"authors\" placeholder=\"Authors\" type=\"text\" onChange={handleInputChange} /> */}\n//                   <div>\n//           <label>Authors:</label>\n//           {authors.map((author, index) => (\n//             <input\n//               key={index}\n//               type=\"text\"\n//               value={author}\n//               onChange={(e) => handleAuthorChange(index, e.target.value)}\n//               placeholder={`Author ${index + 1}`}\n//             />\n//           ))}\n//         </div>\n//                 </InputGroup>\n//               </FormGroup>\n//               <FormGroup>\n//                 <InputGroup className=\"input-group-alternative mb-3\">\n//                   <InputGroupAddon addonType=\"prepend\">\n//                     <InputGroupText>\n//                       <i className=\"ni ni-hat-3\" />\n//                     </InputGroupText>\n//                   </InputGroupAddon>\n//                   <Input name=\"abstract\" placeholder=\"Abstract\" type=\"text\" onChange={handleInputChange} />\n//                 </InputGroup>\n//               </FormGroup>\n//               <FormGroup>\n//                 <InputGroup className=\"input-group-alternative mb-3\">\n//                   <InputGroupAddon addonType=\"prepend\">\n//                     <InputGroupText>\n//                       <i className=\"ni ni-cloud-download-95\" />\n//                     </InputGroupText>\n//                   </InputGroupAddon>\n//                   <Input\n//                     name=\"driveLink\"\n//                     placeholder=\"Google Drive Link\"\n//                     type=\"text\"\n//                     onChange={handleInputChange}\n//                   />\n//                 </InputGroup>\n//               </FormGroup>\n\n//               {/* Submit Button */}\n//               <div className=\"text-center\">\n//                 <Button className=\"mt-4\" color=\"primary\" type=\"submit\">\n//                   Submit\n//                 </Button>\n//               </div>\n//             </Form>\n//           </CardBody>\n//         </Card>\n//       </Col>\n\n//     <div>\n//       <h2>Camera Ready Submission</h2>\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <label>Paper Title:</label>\n//           <input type=\"text\" value={paperTitle} onChange={(e) => setPaperTitle(e.target.value)} required />\n//         </div>\n//         <div>\n//           <label>Authors:</label>\n//           {authors.map((author, index) => (\n//             <input\n//               key={index}\n//               type=\"text\"\n//               value={author}\n//               onChange={(e) => handleAuthorChange(index, e.target.value)}\n//               placeholder={`Author ${index + 1}`}\n//             />\n//           ))}\n//         </div>\n//         <div>\n//           <label>Abstract:</label>\n//           <textarea value={abstract} onChange={(e) => setAbstract(e.target.value)} required />\n//         </div>\n//         <div>\n//           <label>Google Drive Link:</label>\n//           <input type=\"text\" value={driveLink} onChange={(e) => setDriveLink(e.target.value)} required />\n//         </div>\n//         <button type=\"submit\">Submit</button>\n//       </form>\n//       {submissionStatus && <p>{submissionStatus}</p>}\n//     </div>\n//     </>\n//   );\n// };\n\n// export default CameraReadyPage;","map":{"version":3,"names":[],"sources":["/home/apmosys/Desktop/IEEE Authenticator/Frontend/src/views/examples/CameraReadyPage.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import {\n//     Button,\n//     Card,\n//     CardHeader,\n//     CardBody,\n//     FormGroup,\n//     Form,\n//     Input,\n//     InputGroupAddon,\n//     InputGroupText,\n//     InputGroup,\n//     Row,\n//     Col,\n//   } from \"reactstrap\";\n  \n\n// const CameraReadyPage = () => {\n//   const [paperTitle, setPaperTitle] = useState('');\n//   const [authors, setAuthors] = useState(['', '', '', '']);\n//   const [abstract, setAbstract] = useState('');\n//   const [driveLink, setDriveLink] = useState('');\n//   const [submissionStatus, setSubmissionStatus] = useState('');\n\n//   const handleAuthorChange = (index, value) => {\n//     const newAuthors = [...authors];\n//     newAuthors[index] = value;\n//     setAuthors(newAuthors);\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     // Check if there are at least 1 and at most 4 authors\n//     const filteredAuthors = authors.filter((author) => author.trim() !== '');\n//     if (filteredAuthors.length === 0 || filteredAuthors.length > 4) {\n//       setSubmissionStatus('Error: Number of authors should be between 1 and 4');\n//       return;\n//     }\n\n//     // Perform submission logic (mock example)\n//     try {\n//       // Mock API call\n//       const response = await mockSubmitPaper({\n//         paperTitle,\n//         authors: filteredAuthors.join(', '),\n//         abstract,\n//         driveLink,\n//       });\n\n//       // Display submission status\n//       setSubmissionStatus(response.success ? 'Submission successful!' : 'Submission failed');\n//     } catch (error) {\n//       console.error('Error during submission:', error);\n//       setSubmissionStatus('Submission failed');\n//     }\n//   };\n\n//   // Mock API function\n//   const mockSubmitPaper = (data) => {\n//     return new Promise((resolve) => {\n//       // Simulate API call delay\n//       setTimeout(() => {\n//         // Mock response\n//         resolve({ success: true, data });\n//       }, 1000);\n//     });\n//   };\n\n//   return (\n//     <>\n//     <UserHeader/>\n//     <Col lg=\"6\" md=\"8\">\n//         <Card className=\"bg-secondary shadow border-0\">\n//           <CardBody className=\"px-lg-5 py-lg-5\">\n//             <div className=\"text-center text-muted mb-4\">\n//               <small>Camera Ready Submission</small>\n//             </div>\n//             <Form role=\"form\" onSubmit={handleSubmit}>\n//               <FormGroup>\n//                 <InputGroup className=\"input-group-alternative mb-3\">\n//                   <InputGroupAddon addonType=\"prepend\">\n//                     <InputGroupText>\n//                       <i className=\"ni ni-hat-3\" />\n//                     </InputGroupText>\n//                   </InputGroupAddon>\n//                   <Input name=\"paper title\" placeholder=\"Paper Title\" type=\"text\" onChange={handleInputChange} />\n//                 </InputGroup>\n//               </FormGroup>\n//               <FormGroup>\n//                 <InputGroup className=\"input-group-alternative mb-3\">\n//                   <InputGroupAddon addonType=\"prepend\">\n//                     <InputGroupText>\n//                       <i className=\"ni ni-email-83\" />\n//                     </InputGroupText>\n//                   </InputGroupAddon>\n//                   {/* <Input name=\"authors\" placeholder=\"Authors\" type=\"text\" onChange={handleInputChange} /> */}\n//                   <div>\n//           <label>Authors:</label>\n//           {authors.map((author, index) => (\n//             <input\n//               key={index}\n//               type=\"text\"\n//               value={author}\n//               onChange={(e) => handleAuthorChange(index, e.target.value)}\n//               placeholder={`Author ${index + 1}`}\n//             />\n//           ))}\n//         </div>\n//                 </InputGroup>\n//               </FormGroup>\n//               <FormGroup>\n//                 <InputGroup className=\"input-group-alternative mb-3\">\n//                   <InputGroupAddon addonType=\"prepend\">\n//                     <InputGroupText>\n//                       <i className=\"ni ni-hat-3\" />\n//                     </InputGroupText>\n//                   </InputGroupAddon>\n//                   <Input name=\"abstract\" placeholder=\"Abstract\" type=\"text\" onChange={handleInputChange} />\n//                 </InputGroup>\n//               </FormGroup>\n//               <FormGroup>\n//                 <InputGroup className=\"input-group-alternative mb-3\">\n//                   <InputGroupAddon addonType=\"prepend\">\n//                     <InputGroupText>\n//                       <i className=\"ni ni-cloud-download-95\" />\n//                     </InputGroupText>\n//                   </InputGroupAddon>\n//                   <Input\n//                     name=\"driveLink\"\n//                     placeholder=\"Google Drive Link\"\n//                     type=\"text\"\n//                     onChange={handleInputChange}\n//                   />\n//                 </InputGroup>\n//               </FormGroup>\n\n//               {/* Submit Button */}\n//               <div className=\"text-center\">\n//                 <Button className=\"mt-4\" color=\"primary\" type=\"submit\">\n//                   Submit\n//                 </Button>\n//               </div>\n//             </Form>\n//           </CardBody>\n//         </Card>\n//       </Col>\n\n\n\n\n//     <div>\n//       <h2>Camera Ready Submission</h2>\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <label>Paper Title:</label>\n//           <input type=\"text\" value={paperTitle} onChange={(e) => setPaperTitle(e.target.value)} required />\n//         </div>\n//         <div>\n//           <label>Authors:</label>\n//           {authors.map((author, index) => (\n//             <input\n//               key={index}\n//               type=\"text\"\n//               value={author}\n//               onChange={(e) => handleAuthorChange(index, e.target.value)}\n//               placeholder={`Author ${index + 1}`}\n//             />\n//           ))}\n//         </div>\n//         <div>\n//           <label>Abstract:</label>\n//           <textarea value={abstract} onChange={(e) => setAbstract(e.target.value)} required />\n//         </div>\n//         <div>\n//           <label>Google Drive Link:</label>\n//           <input type=\"text\" value={driveLink} onChange={(e) => setDriveLink(e.target.value)} required />\n//         </div>\n//         <button type=\"submit\">Submit</button>\n//       </form>\n//       {submissionStatus && <p>{submissionStatus}</p>}\n//     </div>\n//     </>\n//   );\n// };\n\n// export default CameraReadyPage;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}